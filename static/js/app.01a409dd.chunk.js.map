{"version":3,"sources":["Colors.js","App.style.js","App.js"],"names":["theme","StyleSheet","create","container","flex","backgroundColor","paddingHorizontal","header","justifyContent","flexDirection","marginTop","btnText","fontSize","fontWeight","input","paddingVertical","borderRadius","marginVertical","toDo","marginBottom","alignItems","toDoText","color","App","useState","working","setWorking","text","setText","toDos","setToDos","useEffect","loadToDos","saveToDos","toSave","a","async","AsyncStorage","setItem","JSON","stringify","getItem","s","parse","console","log","View","style","styles","StatusBar","TouchableOpacity","onPress","Text","TextInput","onSubmitEditing","newToDos","Date","now","onChangeText","payload","returnKeyType","value","placeholder","ScrollView","Object","keys","map","key","Platform","OS","confirm","Alert","alert","deleteToDo","Fontisto","name","size"],"mappings":"oQAAaA,EACL,QADKA,EAEH,UAFGA,EAGD,UCAGC,E,KAAAA,EAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,gBAAiBL,EACjBM,kBAAmB,IAErBC,OAAQ,CACNC,eAAgB,gBAChBC,cAAe,MACfC,UAAW,IAEbC,QAAS,CACPC,SAAU,GACVC,WAAY,OAEdC,MAAO,CACLT,gBAAiB,QACjBU,gBAAiB,GACjBT,kBAAmB,GACnBU,aAAc,GACdC,eAAgB,GAChBL,SAAU,IAEZM,KAAM,CACJb,gBAAiBL,EACjBmB,aAAc,GACdJ,gBAAiB,GACjBT,kBAAmB,GACnBU,aAAc,GACdP,cAAe,MACfW,WAAY,SACZZ,eAAgB,iBAElBa,SAAU,CACRC,MAAO,QACPV,SAAU,GACVC,WAAY,S,wkBCjBD,SAASU,IACtB,MAA8BC,oBAAS,GAAvC,WAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,IAAjC,WAAOG,EAAP,KAAaC,EAAb,KACA,EAA0BJ,mBAAS,IAAnC,WAAOK,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRC,MACC,IAEH,IAKMC,EAAY,SAAOC,GAAP,SAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACVE,IAAaC,QAjBH,SAiBwBC,KAAKC,UAAUN,KADvC,6DAGZF,EAAY,0BAAAG,EAAAC,OAAA,2EAAAD,EAAA,MAEEE,IAAaI,QArBf,WAmBA,QAERC,EAFQ,SAIZZ,EAASS,KAAKI,MAAMD,IAJR,gDAOdE,QAAQC,IAAR,MAPc,iEAsDlB,OACE,eAACC,EAAA,EAAD,CAAMC,MAAOC,EAAO7C,UAApB,UACE,cAAC8C,EAAA,EAAD,CAAWF,MAAM,SAEjB,eAACD,EAAA,EAAD,CAAMC,MAAOC,EAAOzC,OAApB,UACE,cAAC2C,EAAA,EAAD,CAAkBC,QAnEX,kBAAMzB,GAAW,IAmExB,SACE,cAAC0B,EAAA,EAAD,CACEL,MAAO,CACLnC,SAAU,GACVC,WAAY,MACZS,MAAOG,EAAU,QAAUzB,GAJ/B,oBAUF,cAACkD,EAAA,EAAD,CAAkBC,QA7ET,kBAAMzB,GAAW,IA6E1B,SACE,cAAC0B,EAAA,EAAD,CACEL,MAAO,CACLnC,SAAU,GACVC,WAAY,MACZS,MAAQG,EAAoBzB,EAAV,SAJtB,yBAYJ,cAACqD,EAAA,EAAD,CACEC,gBAzEU,0BAAAnB,EAAAC,OAAA,mDACD,KAATT,EADU,wDAKR4B,EALQ,OAMT1B,GANS,UAOX2B,KAAKC,MAAQ,CAAE9B,OAAMF,aAExBK,EAASyB,GATK,WAAApB,EAAA,MAURF,EAAUsB,IAVF,OAWd3B,EAAQ,IAXM,6DA0EV8B,aA1Fe,SAACC,GAAD,OAAa/B,EAAQ+B,IA2FpCC,cAAc,OACdC,MAAOlC,EACPmC,YAAarC,EAAU,cAAgB,2BACvCsB,MAAOC,EAAOlC,QAGhB,cAACiD,EAAA,EAAD,UACGC,OAAOC,KAAKpC,GAAOqC,KAAI,SAAAC,GAAG,OACzBtC,EAAMsC,GAAK1C,UAAYA,EACrB,eAACqB,EAAA,EAAD,CAAgBC,MAAOC,EAAO9B,KAA9B,UACE,cAACkC,EAAA,EAAD,CAAML,MAAOC,EAAO3B,SAApB,SACGQ,EAAMsC,GAAKxC,OAEd,cAACuB,EAAA,EAAD,CAAkBC,QAAS,kBA1EpB,SAACgB,GAClB,GAAmB,OAAfC,IAASC,IACX,GAAIC,QAAQ,qCAAsC,CAChD,IAAMf,EAAQ,KAAQ1B,UACf0B,EAASY,GAChBrC,EAASyB,GACTtB,EAAUsB,SAGZgB,IAAMC,MACJ,eACA,gBACA,CACE,CAAE7C,KAAM,SAAUoB,MAAO,UACzB,CACEpB,KAAM,WACNoB,MAAO,cACPI,QAAS,WACP,IAAMI,EAAQ,KAAQ1B,UACf0B,EAASY,GAChBrC,EAASyB,GACTtB,EAAUsB,OAqDuBkB,CAAWN,IAA5C,SACE,cAACO,EAAA,EAAD,CAAUC,KAAK,QAAQC,KAAM,GAAItD,MAAOtB,QALjCmE,GAQT,e","file":"static/js/app.01a409dd.chunk.js","sourcesContent":["export const theme = {\n    bg: \"black\",\n    gray: \"#3A3D40\",\n    toDoBg: \"#1A1C20\",\n};","import { StyleSheet } from \"react-native\";\nimport { theme } from './Colors';\n\nexport default StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.bg,\n    paddingHorizontal: 20,\n  },\n  header: {\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n    marginTop: 50,\n  },\n  btnText: {\n    fontSize: 38,\n    fontWeight: \"600\",\n  },\n  input: {\n    backgroundColor: \"white\",\n    paddingVertical: 15,\n    paddingHorizontal: 20,\n    borderRadius: 30,\n    marginVertical: 20,\n    fontSize: 18,\n  },\n  toDo: {\n    backgroundColor: theme.toDoBg,\n    marginBottom: 10,\n    paddingVertical: 20,\n    paddingHorizontal: 20,\n    borderRadius: 15,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  toDoText: {\n    color: \"white\",\n    fontSize: 16,\n    fontWeight: \"600\",\n  },\n});\n","import { StatusBar } from 'expo-status-bar';\nimport { useEffect, useState } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  TouchableHighlight,\n  TouchableWithoutFeedback,\n  Pressable,\n  TextInput,\n  ScrollView,\n  Alert,\n  Platform\n} from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Fontisto } from '@expo/vector-icons';\nimport { theme } from './Colors';\nimport styles from './App.style';\n\nconst STORAGE_KEY = \"@toDos\";\n\nexport default function App() {\n  const [working, setWorking] = useState(true);\n  const [text, setText] = useState(\"\");\n  const [toDos, setToDos] = useState({});\n\n  useEffect(() => {\n    loadToDos();\n  }, []);\n\n  const work = () => setWorking(true);\n  const travel = () => setWorking(false);\n\n  const onChangeText = (payload) => setText(payload);\n\n  const saveToDos = async (toSave) => {\n    await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(toSave));\n  };\n  const loadToDos = async () => {\n    try {\n      const s = await AsyncStorage.getItem(STORAGE_KEY);\n      if (s) {\n        setToDos(JSON.parse(s));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const addToDo = async () => {\n    if (text === \"\") {\n      return;\n    }\n\n    const newToDos = {\n      ...toDos,\n      [Date.now()]: { text, working }\n    };\n    setToDos(newToDos);\n    await saveToDos(newToDos);\n    setText(\"\");\n  };\n\n  const deleteToDo = (key) => {\n    if (Platform.OS == \"web\") {\n      if (confirm(\"Do you want to delete this To Do?\")) {\n        const newToDos = { ...toDos };\n        delete newToDos[key];\n        setToDos(newToDos);\n        saveToDos(newToDos);\n      }\n    } else {\n      Alert.alert(\n        \"Delete To Do\",\n        \"Are you sure?\",\n        [\n          { text: \"Cancel\", style: \"cancel\" },\n          {\n            text: \"I'm sure\",\n            style: \"destructive\",\n            onPress: () => {\n              const newToDos = { ...toDos };\n              delete newToDos[key];\n              setToDos(newToDos);\n              saveToDos(newToDos);\n            }\n          },\n        ]\n      );\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n\n      <View style={styles.header}>\n        <TouchableOpacity onPress={work}>\n          <Text\n            style={{\n              fontSize: 38,\n              fontWeight: \"600\",\n              color: working ? \"white\" : theme.gray\n            }}\n          >\n            Work\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={travel}>\n          <Text\n            style={{\n              fontSize: 38,\n              fontWeight: \"600\",\n              color: !working ? \"white\" : theme.gray\n            }}\n          >\n            Travel\n          </Text>\n        </TouchableOpacity>\n      </View>\n\n      <TextInput\n        onSubmitEditing={addToDo}\n        onChangeText={onChangeText}\n        returnKeyType=\"done\"\n        value={text}\n        placeholder={working ? \"Add a To Do\" : \"Where do you want to go?\"}\n        style={styles.input}\n      />\n\n      <ScrollView>\n        {Object.keys(toDos).map(key => (\n          toDos[key].working === working ? (\n            <View key={key} style={styles.toDo}>\n              <Text style={styles.toDoText}>\n                {toDos[key].text}\n              </Text>\n              <TouchableOpacity onPress={() => deleteToDo(key)}>\n                <Fontisto name=\"trash\" size={18} color={theme.gray} />\n              </TouchableOpacity>\n            </View>\n          ) : null\n        ))}\n      </ScrollView>\n    </View>\n  );\n}\n"],"sourceRoot":""}